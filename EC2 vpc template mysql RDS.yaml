AWSTemplateFormatVersion: 2010-09-09
Description: >-
  AWS CloudFormation pvnakum7 Sample Template for EC2 with RDS and connect only VPC.
Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    Type: String
    MinLength: '1'
    MaxLength: '255'
    AllowedPattern: '[\x20-\x7E]*'
    ConstraintDescription: can contain only ASCII characters.
  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: m1.small
    AllowedValues:
      - t1.micro
      - m1.small
      - m1.medium
      - m1.large
    ConstraintDescription: must be a valid EC2 instance type.
  
  DBName:
    Default: parasdb
    Description: The paras database name
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric char.
  DBUsername:
    Default: admin
    NoEcho: 'true'
    Description: Paras database admin username
    Type: String
    MinLength: '1'
    MaxLength: '16'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric char.
  DBPassword:
    Default: password
    NoEcho: 'true'
    Description: The paras database admin account password
    Type: String
    MinLength: '8'
    MaxLength: '41'
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: must contain only alphanumeric characters.
  DBClass:
    Default: db.m1.small
    Description: Database instance class
    Type: String
    AllowedValues:
      - db.m1.small
      - db.m1.large
    ConstraintDescription: must select a valid database instance type.
  DBAllocatedStorage:
    Default: '5'
    Description: The size of the database (Gb)
    Type: Number
    MinValue: '5'
    MaxValue: '1024'
    ConstraintDescription: must be between 5 and 1024Gb.
  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
Mappings:
  AWSInstanceType2Arch:
    t1.micro:
      Arch: '64'
    m1.small:
      Arch: '64'
    m1.medium:
      Arch: '64'
    m1.large:
      Arch: '64'
    
  AWSRegionArch2AMI:
    us-east-1:
      '32': ami-a0cd60c9
      '64': ami-aecd60c7
      64HVM: ami-a8cd60c1
    us-west-2:
      '32': ami-46da5576
      '64': ami-48da5578
      64HVM: NOT_YET_SUPPORTED
    
Resources:
  myVPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: 'false'
      EnableDnsHostnames: 'false'
      InstanceTenancy: dedicated
      Tags:
        - Key: paras123
          Value: paras123

  WebServer:
    Type: 'AWS::EC2::Instance'
    Properties:
      ImageId:
        FindInMap:
          - AWSRegionArch2AMI
          - Ref: 'AWS::Region'
            FindInMap: 
              AWSInstanceType2Arch:
                - Ref: InstanceType
                - Arch
      InstanceType: 
        Ref: InstanceType
      SecurityGroups:
        - Ref: WebServerSecurityGroup
      KeyName:
        Ref: KeyName  
  WaitHandle:
    Type: 'AWS::CloudFormation::WaitConditionHandle'  
  WaitCondition:
    Type: 'AWS::CloudFormation::WaitCondition'
    DependsOn: WebServer
    Properties:
      Handle: 
        Ref: WaitHandle
      Timeout: '300'

  DBInstance:
    Type: 'AWS::RDS::DBInstance'
    Properties:
      DBName: 
        Ref: DBName
      Engine: MySQL
      MasterUsername: 
        Ref: DBUsername
      DBInstanceClass: 
          Ref: DBClass
      DBSecurityGroups:
        - Ref: DBSecurityGroup
      AllocatedStorage:
        Ref: DBAllocatedStorage
      MasterUserPassword: 
        Ref: DBPassword
  DBSecurityGroup:
    Type: 'AWS::RDS::DBSecurityGroup'
    Properties:
      DBSecurityGroupIngress:
        EC2SecurityGroupName: 
          Ref: WebServerSecurityGroup
      GroupDescription: Frontend Access
  WebServerSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enable HTTP access via port 80 and SSH access
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 
            Ref: SSHLocation
Outputs:
  InstanceId: 
    Description: "InstanceId of the newly created RDS Instance"
    Value: DBInstance