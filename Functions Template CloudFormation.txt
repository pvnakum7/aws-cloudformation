Template CloudFormation Functions






1.
    Fn::Base64
2.
    Fn::FindInMap
3.
    Fn::GetAtt
4.
    Fn::GetAZs
5.
    Fn::If
6.
    Fn::ImportValue
7.
    Fn::Join
8.
    Fn::Split
9.
    Fn::Select
10.
    Fn::Sub
11.
    Ref



1.
Fn::Base64:
  !Sub string

--The intrinsic function Fn::Base64 returns the Base64 representation of the input string

2.

Parameters
(
MapName -       The logical name of a mapping declared in the Mappings section that contains the keys and values.
TopLevelKey -     The top-level key name. Its value is a list of key-value pairs. ( "AWS::Region"  like :us-east-1)
SecondLevelKey -    The second-level key name, which is set to one of the keys from the list assigned to TopLevelKey. (HVM64 )
)

Mappings: 
  RegionMap: 
    us-east-1: 
      HVM64: "ami-0ff8a91507f77f867"
      HVMG2: "ami-0a584ac55a7631c0c"

Resources: 
  myEC2Instance: 
    Type: "AWS::EC2::Instance"
    Properties: 
      ImageId: !FindInMap
        - RegionMap
        - !Ref 'AWS::Region'
        - HVM64
      InstanceType: m1.small

3.
Fn::GetAtt

-The Fn::GetAtt intrinsic function returns the value of an attribute from a resource in the template.
Syntax for the full function name:
type 1 - syntex:
Fn::GetAtt: [ logicalNameOfResource, attributeName ]

Tyep 2 -Syntax for the short form:

!GetAtt logicalNameOfResource.attributeName


4.
Fn::GetAZs

-Function Fn::GetAZs returns an array that lists Availability Zones for a specified region

Fn::GetAZs: ""

Fn::GetAZs:
  Ref: "AWS::Region"

Fn::GetAZs: us-east-1

5.
Fn::ImportValue
and Note: You can't use the short form of !ImportValue when it contains a !Sub.

Fn::ImportValue:
  !Sub "${NetworkStack}-SubnetID"


function Fn::ImportValue returns the value of an output exported by another stack
Note

The following restrictions apply to cross-stack references:

    For each AWS account, Export names must be unique within a region.

    You can't create cross-stack references across regions. You can use the intrinsic function Fn::ImportValue to import only values that have been exported within the same region.

    For outputs, the value of the Name property of an Export can't use Ref or GetAtt functions that depend on a resource.

    Similarly, the ImportValue function can't include Ref or GetAtt functions that depend on a resource.

    You can't delete a stack if another stack references one of its outputs.

    You can't modify or remove an output value that is referenced by another stack.

Stack A Export

"Outputs" : {
  "PublicSubnet" : {
    "Description" : "The subnet ID to use for public web servers",
    "Value" :  { "Ref" : "PublicSubnet" },
    "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-SubnetID" }}
  },
  "WebServerSecurityGroup" : {
    "Description" : "The security group ID to use for public web servers",
    "Value" :  { "Fn::GetAtt" : ["WebServerSecurityGroup", "GroupId"] },
    "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-SecurityGroupID" }}
  }
}

Stack B Import

"Resources" : {
  "WebServerInstance" : {
    "Type" : "AWS::EC2::Instance",
    "Properties" : {
      "InstanceType" : "t2.micro",
      "ImageId" : "ami-a1b23456",
      "NetworkInterfaces" : [{
        "GroupSet" : [{"Fn::ImportValue" : {"Fn::Sub" : "${NetworkStackNameParameter}-SecurityGroupID"}}],
        "AssociatePublicIpAddress" : "true",
        "DeviceIndex" : "0",
        "DeleteOnTermination" : "true",
        "SubnetId" : {"Fn::ImportValue" : {"Fn::Sub" : "${NetworkStackNameParameter}-SubnetID"}}
      }]
    }
  }
}


7. 
Fn::Join
-Function Fn::Join appends a set of values into a single value, separated by the specified delimiter.
Example:

!Join
  - ''
  - - 'arn:'
    - !Ref Partition
    - ':s3:::elasticbeanstalk-*-'
    - !Ref 'AWS::AccountId'


8.
Fn::Select
-Function Fn::Select returns a single object from a list of objects by index

Parameters: 
  DbSubnetIpBlocks: 
    Description: "Comma-delimited list of three CIDR blocks"
    Type: CommaDelimitedList
    Default: "10.0.48.0/24, 10.0.112.0/24, 10.0.176.0/24"

Here When 4 CIDR block and choose first one for 0, second for 1

Subnet0: 
  Type: "AWS::EC2::Subnet"
  Properties: 
    VpcId: !Ref VPC
    CidrBlock: !Select [ 0, !Ref DbSubnetIpBlocks ]

9.
Fn::Split
To split a string into a list of string values so that 
you can select an element from the resulting string list, use the Fn::Split intrinsic function

string ["a", "", "c", "" ] and this string split  :

!Split [ "|" , "a||c|" ]

or  selects the third element from the resulting list of subnet IDs and seperate by ","

!Select [2, !Split [",", !ImportValue AccountSubnetIDs]]



10.Fn::Sub